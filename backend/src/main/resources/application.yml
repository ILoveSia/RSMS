# Spring Boot 3.5 기반 ITCEN Solution Backend 설정
# 재사용 가능한 웹 프로젝트 개발환경

# 기본 설정 (모든 프로파일에 공통 적용)
server:
  port: 8080
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  # Spring Boot 3.5 성능 최적화
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-connections: 8192

spring:
  application:
    name: itcen-backend

  # 프로파일 설정
  profiles:
    active: local

  # Spring Boot 3.5 최신 기능 활용
  main:
    banner-mode: console
    web-application-type: servlet

  # JPA/Hibernate 설정 (Spring Boot 3.5 최적화)
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: Asia/Seoul
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    open-in-view: false

  # Session 설정 (Redis 활성화)
  session:
    store-type: redis
    redis:
      flush-mode: on_save
      namespace: "itcen:session"
    timeout: 3600 # 1시간 (BackendApplication과 동일)

  # 개발 도구 설정
  devtools:
    livereload:
      enabled: false
    restart:
      enabled: true
      additional-paths: src/main/java

  # JSON 설정 (Spring Boot 3.5 최적화)
  jackson:
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false

  # CORS 설정
  web:
    cors:
      allowed-origins:
        - 'http://localhost:3000'
      allowed-methods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowed-headers: '*'
      allow-credentials: true
      max-age: 3600

# 로깅 설정
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.itcen: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n'

# 관리 엔드포인트 설정 (Spring Boot 3.5 최신 기능)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    info:
      enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

---
# 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:postgresql://localhost:5432/dev_db
    username: postgres
    password: 1q2w3e4r!
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      auto-commit: false

  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

---
# Docker 환경
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/postgres
    username: postgres
    password: 1q2w3e4r!
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      auto-commit: false

  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 16
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

---
# 운영 환경
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:1q2w3e4r!}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 20
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
      auto-commit: false

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 32
          max-idle: 16
          min-idle: 8
          max-wait: -1ms

# 운영환경 로깅 설정
logging:
  level:
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.itcen: INFO
  file:
    name: logs/itcen-backend.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
