version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17.5
    container_name: itcen-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1q2w3e4r!
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    networks:
      - itcen-network
    restart: unless-stopped

  # Redis for Caching/Session
  redis:
    image: redis:7.4-alpine
    container_name: itcen-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    networks:
      - itcen-network
    restart: unless-stopped

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: itcen-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1q2w3e4r!
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      JAVA_OPTS: >-
        -Xms512m
        -Xmx1024m
        -Dspring.profiles.active=docker
        -Dfile.encoding=UTF-8
        -Duser.timezone=Asia/Seoul
    depends_on:
      - postgres
      - redis
    networks:
      - itcen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: itcen-frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      VITE_API_BASE_URL: http://localhost:8080/api
      VITE_APP_TITLE: "ITCEN Solution"
    depends_on:
      - backend
    networks:
      - itcen-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: itcen-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - itcen-network
    restart: unless-stopped
    profiles:
      - prod

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  itcen-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 